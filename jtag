openocd -f board/esp32-wrover-kit-3.3v.cfg

openocd -f board/esp32-wrover-kit-3.3v.cfg -c "program_esp build/hello_world.bin 0x10000 verify reset exit"

menuconfig vast; e.g. setting clock speed, flash size, connection configuration
idf.py fullclean
version.txt:
0.0.1
partitions.csv: (start from default partitions table)
storage, data, spiffs, 0x11000, 0x100000, 
main/CMakeLists.txt:
spiffs_create_partition_image(storage folder-we-want FLASH_IN_PROJECT)

esp_vfs_spiffs_conf_t config = {
  .base_path = "/storage",
  .partition_label = NULL,
  .max_files = 5,
  .format_if_mount_failed = true
}

if (result != ESP_OK)
{
  ESP_LOGE(tag, "failed: %s", esp_err_to_name(result));
}
esp_spiffs_info(config.partition_label, &total, &used)
FILE *f = fopen("/storage/myfile.txt", "r");
printf();


Wifi:
After esp-specific setup, can use: socket() (i.e. get some POSIX headers)


#include "driver/gpio.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
esp-idf/components/driver/gpio.c

void app_main(void)
{
  while (1)
  {
    ...
    vTaskDelay(10); // vTaskDelay(pdMS_TO_TICKS(100));
  }
}

TODO: Yuri R. linkedin. australia embedded
vscode 'actionable buttons' plugin (settings.json)

EXTRA_COMPONENTS_DIR protocol_examples_common


sleep on and connect and send data; then sleep again
  esp_sleep_enable_timer_wakeup(random_sleep);
      esp_light_sleep_start();


static server:
https://github.com/JoshMarangoni/rc_robot/blob/main/firmware/main_esp_idf/main/main_esp_idf.c
https://github.com/JoshMarangoni/esp32-sockets/blob/main/main/tcp-client.c
websocket server:
https://github.com/ankayca/ESP32-S2/tree/master

https://github.com/andraz213/UrbanNoiseSensing
The exact specific model is WROOM 32U because it has an external antenna connector. PCB antennas tend to be spotty and have a lot of signal shape peculiarities that are less than ideal in this kind of application. The bad thing about this is that all of the development boards have a very inefficient LDO AMS1117. It is a voltage regulator with a high quiescent current. It consumes 5mA of power at all times. That is unacceptable. I will have to replace those with a more efficient model like MCP1825S. It has a quiescent current of only 220uA, which is far from the lowest, but it's good enough for this application.
